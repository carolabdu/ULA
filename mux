LIBRARY ieee;
USE ieee.std_logic_1164.all;


entity mux is

port (x, y: in std_logic_vector(3 downto 0);     --vetores de entrada
      cin : in std_logic;
     sel : in std_logic_vector (2 downto 0);                    --seletor
     saída : out std_logic_vector(3 downto 0);
end mux;


architecture hardware of mux is

 component somador4bits                        -- 'buscando' somador de 4 bit
 port (a1, b1, cin1 : in std_logic_vector;               -- entradas e carry in do somador
       s1, cout1 : out std_logic);               -- soma e carry out do somador
 end component;
 
 component subtraçao                      -- 'buscando' subtrator de 4 bit
 port (a2, b2, cin2 : in std_logic_vector;               -- entradas e carry in do somador
       s2, cout2 : out std_logic);               -- diferença e carry out do subtrator


 component trocadesinal                        -- 'buscando' operação
 port (a3, b3, cin3 : in std_logic_vector;               -- entradas e carry in do somador
       s3, cout3 : out std_logic);               -- resultado e carry out da operação

 component incremento                       -- 'buscando' operação
 port (a4, b4, cin4 : in std_logic_vector;               -- entradas e carry in do somador
       s4, cout4 : out std_logic);               -- resultado e carry out da operação
       
 component orbit                       -- 'buscando' operação
 port (a5, b5, cin5 : in std_logic_vector;               -- entradas e carry in do somador
       s5, cout : out std_logic);               -- resultado e carry out da operação
       
 component andbit                        -- 'buscando' operação
 port (a6, b6, cin6 : in std_logic_vector;               -- entradas e carry in do somador
       s6, cout6 : out std_logic);               -- resultado e carry out da operação
       
  component dobro                       -- 'buscando' operação
 port (a7, b7, cin7 : in std_logic_vector;               -- entradas e carry in do somador
       s7, cout7 : out std_logic);               -- resultado e carry out da operação

 component comparador                      -- 'buscando' operação
 port (a8, b8, cin8 : in std_logic_vector;               -- entradas e carry in do somador
       s8, cout8 : out std_logic);               -- resultado e carry out da operação
       
begin 
soma: somador4bits PORT MAP( a1, b1, cin1, s1, cout1)
subtração : subtraçao PORT MAP ( a2, b2, cin2, s2, cout2)
troca : trocadesinal PORT MAP ( a3, b3, cin3, s3, cout3)
incr : incremento PORT MAP ( a4, b4, cin4, s4, cout4)
orbit : orbit PORT MAP ( a5, b5, cin5, s5, cout5)
andbit : andbit PORT MAP ( a6, b6, cin6, s6, cout6)
dobro : dobro PORT MAP ( a7, b7, cin7, s7, cout7)
comp : comparador PORT MAP ( a8, b8, cin8, s8, cout8)

  saida <= s1 WHEN (sel= '000')else
           s2 WHEN (sel='001')else
           s3 WHEN (sel='010')else
           s4 WHEN (sel='011')else
           s5 WHEN (sel='100')else
           s6 WHEN (sel='101')else
           s7 WHEN (sel='110')else
           s8; 
           
 


